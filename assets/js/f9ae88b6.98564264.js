"use strict";(self.webpackChunkflojoy_doc=self.webpackChunkflojoy_doc||[]).push([[5605],{62605:(e,n,t)=>{t.d(n,{Z:()=>f});var a=t(67294),r=t(74866),i=t(85162),d=t(92949),l=(t(91262),t(97904)),s=t(83599);t(99869);const o=(0,a.memo)((e=>{let{data:n}=e;return a.createElement(a.Fragment,null,a.createElement(l.HH,{type:"target",position:l.Ly.Left,style:{background:"#555"}}),a.createElement("div",null,a.createElement("strong",null,n.label)),a.createElement(l.HH,{type:"source",position:l.Ly.Right,id:"b"}))}));var c=t(33140),m=t(73091),p=t(2029),u=t(287);const y={default:o},E={tickLabels:{fontSize:8,fill:"#BCC2C4"},label:{fontSize:8,fill:"#BCC2C4"}};function f(e){let{children:n,title:t,data:o}=e,f=JSON.parse(n).rfInstance;const x="20em",{colorMode:A}=(0,d.I)();return a.createElement("div",null,a.createElement("h2",null,`Example: ${t}`),a.createElement(r.Z,null,a.createElement(i.Z,{value:"app",label:"App",default:!0},a.createElement("div",{style:{height:x}},a.createElement(l.x$,{nodes:f.nodes,nodeTypes:y,edges:f.edges,preventScrolling:!0,fitView:!0,panOnDrag:!1,proOptions:{hideAttribution:!0}},a.createElement(s.A,null)))),a.createElement(i.Z,{value:"output",label:"Output"},a.createElement("div",{style:{minHeight:x}},a.createElement(c.k,null,a.createElement(m.E,{label:"x",style:E}),a.createElement(m.E,{dependentAxis:!0,label:"y",style:E}),a.createElement(p.C,{style:{data:{fill:"#7B61FF"}},size:1,data:JSON.parse(o)})))),a.createElement(i.Z,{value:"spec",label:"App JSON spec"},a.createElement("div",{style:{minHeight:x}},a.createElement(u.L,{data:f})))))}},89418:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(67294),r=t(25365);function i(e){let{children:n,index:t,folderPath:i}=e;const d=["notes.md","hardware.md","media.md"],l=["Theory and technical notes","Parts list and drivers","Media"][t],s="https://github.com/flojoy-io/docs/tree/main/docs/nodes"+i+d[t],o="string"==typeof n&&n.includes("Driver doc :");return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("details",null,a.createElement("summary",null,a.createElement("span",{style:{display:"inline-block",cursor:"pointer"}},a.createElement("h4",null,l))),o?null:void 0!==n?a.createElement(r.D,null,n):a.createElement(r.D,null,["No theory or technical notes have been contributed for this node yet.","This node does not require any peripheral hardware to operate. Please see INSTRUMENTS for nodes that interact with the physical world through connected hardware.","No supporting screenshots, photos, or videos have been added to the media.md file for this node."][t]),a.createElement("br",null),a.createElement("small",null,a.createElement("i",null,a.createElement("a",{href:s},"Edit ",d[t]," on GitHub")))),a.createElement("hr",null))}},57685:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(67294);function r(e){let{children:n}=e;return""===n.trim()?"This function does not have a docstring description yet.":a.createElement(a.Fragment,null,a.createElement("blockquote",{style:{padding:"0.2rem"}},n),a.createElement("br",null))}},47062:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(67294),r=t(38388);function i(e){let{children:n}=e;const t="This node does not currently have any input parameters.",i="parameters";if(""===n.trim())return t;let d=r.ZP.parse(n);if(Object.keys(d)[0]!=i)return t;let l=d.parameters;return a.createElement("div",null,a.createElement("h3",null,"Input parameters"),Object.keys(l).map(((e,n)=>a.createElement(a.Fragment,null,a.createElement("details",null,a.createElement("summary",{key:n},a.createElement("code",null,e)),a.createElement("ul",null,Object.keys(l[e]).map(((n,t)=>a.createElement("li",{key:t},n,": ",l[e][n])))))))))}},79267:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(67294),r=t(90814);function i(e){let{children:n}=e,t=n;if(t.includes('"""')){let e=t.split('"""')[0],n=t.split('"""')[2];t=e.trimEnd()+n.trimStart().replace("\n\n","\n")}return a.createElement("div",null,a.createElement("h3",null,"Python code"),a.createElement("details",{open:!0},a.createElement(r.Z,{className:"language-python"},t)),a.createElement("br",null))}},91906:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(67294);function r(){return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("br",null),a.createElement("hr",null),a.createElement("br",null),a.createElement("br",null))}},67475:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>E,contentTitle:()=>u,default:()=>A,frontMatter:()=>p,metadata:()=>y,toc:()=>f});var a=t(87462),r=(t(67294),t(3905)),i=t(57685),d=t(79267),l=t(47062),s=t(62605),o=t(91906),c=t(89418);var m=t(86621);const p={},u=void 0,y={unversionedId:"nodes/instruments/serial/py_serial/PY_SERIAL",id:"nodes/instruments/serial/py_serial/PY_SERIAL",title:"PY_SERIAL",description:"[//]: #",source:"@site/docs/nodes/instruments/serial/py_serial/PY_SERIAL.md",sourceDirName:"nodes/instruments/serial/py_serial",slug:"/nodes/instruments/serial/py_serial/",permalink:"/nodes/instruments/serial/py_serial/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"USB_WEB_CAM",permalink:"/nodes/instruments/cameras/usb_web_cam/"},next:{title:"Flojoy UI Introduction",permalink:"/nodes/introduction"}},E={},f=[{value:"Appendix",id:"appendix",level:2}],x={toc:f};function A(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},x,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)(i.Z,{mdxType:"DocString"},"In this page, we will go through an example of simple data aquisition from a serial device.\nThis example will assume an Arduino is being used although any serial device should work.\n\n\n    Node to take simple time dependent 1d data from an Ardunio,\n    or a similar serial device.\n\n\n    It is important that the last line Arduino is returning is the\n    data with a new line at the end (i.e. println())."),(0,r.kt)(d.Z,{mdxType:"PythonCode"},'from flojoy import flojoy, DataContainer\nfrom time import sleep\nimport serial\nimport numpy as np\nfrom datetime import datetime\nimport plotly.graph_objects as go\n\n\n@flojoy\ndef SERIAL(dc_inputs, params):\n    """\n    Node to take simple time dependent 1d data from an Ardunio,\n    or a similar serial device.\n    For example you can record temperature following this tutorial:\n\n    https://learn.adafruit.com/thermistor/using-a-thermistor\n\n    with Serial.println(steinhart) as the only line printing.\n\n    It is important that the last line Arduino is returning is the\n    data with a new line at the end (i.e. println()).\n\n    The other lines must be returned with print()\n    with print(",") between each line.\n\n    For example:\n\n    print(reading0)\n    print(",")\n    println(reading1)\n\n    If there is more than one column, the SELECT_ARRAY node must be\n    used after this node.\n\n    params:\n    num_readings: Number of points to record.\n    record_period: Length between two recordings in seconds.\n    BAUD_RATE: Baud rate for the serial device.\n    com_port: COM port of the serial device\n\n    num_readings * record_period is roughly the run length in seconds.\n    """\n    print("parameters passed to SERIAL: ", params)\n    COM_PORT = params.get("com_port", "/dev/ttyUSB0")\n    BAUD = int(params.get("BAUD_RATE", 9600))\n    NUM = int(params.get("num_readings", 100))\n    RECORD_PERIOD = float(params.get("record_period", 1))\n\n    ser = serial.Serial(COM_PORT, timeout=1, baudrate=BAUD)\n    readings = []\n    times = []\n    # The first reading is commonly empty.\n    s = ser.readline().decode()\n\n    for i in range(NUM):\n        ts = datetime.now()\n        s = ser.readline().decode()\n        # Some readings may be empty.\n        if s != "":\n            reading = s[:-2].split(",")\n            readings.append(reading)\n\n            ts = datetime.now()\n            seconds = float(\n                ts.hour * 3600 + ts.minute * 60 + ts.second + ts.microsecond / 10**6\n            )\n\n            times.append(seconds)\n\n            if len(times) > 0:\n                time1 = seconds - times[i]\n            else:\n                # Estimate execution time.\n                time1 = 0.1\n\n            if time1 < RECORD_PERIOD:\n                sleep(RECORD_PERIOD - time1)\n\n    times = np.array(times)\n    times -= times[0]\n    readings = np.array(readings)\n    readings = readings.astype("float64")\n    # If there are two or more columns return a Plotly figure.\n    if readings.ndim == 2:\n        data = go.Line(x=times, y=readings[:, 0], mode="markers")\n        fig = go.Figure(data=data)\n        return DataContainer(type="plotly", fig=fig, x=times, y=readings)\n    else:\n        return DataContainer(x=times, y=readings)'),(0,r.kt)(l.Z,{mdxType:"Parameters"},'    parameters:\n      comport:\n        type: string\n        default: "/dev/ttyUSB0"\n      baudrate:\n        type: float\n        default: 9600\n      num_readings:\n        type: float\n        default: 100\n      record_period:\n        type: float\n        default: 1'),(0,r.kt)(o.Z,{mdxType:"SectionBreak"}),(0,r.kt)(s.Z,{title:"Temperature measurement with LabJack",data:'[{"x":0.0,"y":0.0395410429},{"x":0.0101010101,"y":0.1696815527},{"x":0.0202020202,"y":0.2618444511},{"x":0.0303030303,"y":0.6070171204},{"x":0.0404040404,"y":0.7228015448},{"x":0.0505050505,"y":0.7470683112},{"x":0.0606060606,"y":0.7536513208},{"x":0.0707070707,"y":0.9655237542},{"x":0.0808080808,"y":1.0290083915},{"x":0.0909090909,"y":1.1296094864},{"x":0.101010101,"y":1.1158556283},{"x":0.1111111111,"y":1.119485694},{"x":0.1212121212,"y":1.0647177354},{"x":0.1313131313,"y":1.0174873424},{"x":0.1414141414,"y":1.1451250973},{"x":0.1515151515,"y":1.0771929142},{"x":0.1616161616,"y":0.9134131293},{"x":0.1717171717,"y":0.9812634065},{"x":0.1818181818,"y":0.7971223406},{"x":0.1919191919,"y":0.8729734082},{"x":0.202020202,"y":0.6734002398},{"x":0.2121212121,"y":0.5467659659},{"x":0.2222222222,"y":0.3505720538},{"x":0.2323232323,"y":0.3988720144},{"x":0.2424242424,"y":0.1898238199},{"x":0.2525252525,"y":0.1943693341},{"x":0.2626262626,"y":0.0864911493},{"x":0.2727272727,"y":-0.1019656285},{"x":0.2828282828,"y":-0.3554144982},{"x":0.2929292929,"y":-0.5100165939},{"x":0.303030303,"y":-0.598239102},{"x":0.3131313131,"y":-0.6853489616},{"x":0.3232323232,"y":-0.7729880645},{"x":0.3333333333,"y":-0.7739515342},{"x":0.3434343434,"y":-0.7849449812},{"x":0.3535353535,"y":-0.7656457527},{"x":0.3636363636,"y":-0.8576945493},{"x":0.3737373737,"y":-0.7910151818},{"x":0.3838383838,"y":-0.9148033649},{"x":0.3939393939,"y":-0.7854397074},{"x":0.404040404,"y":-0.9313637018},{"x":0.4141414141,"y":-0.8555179159},{"x":0.4242424242,"y":-0.7981988209},{"x":0.4343434343,"y":-0.5316285273},{"x":0.4444444444,"y":-0.6220733532},{"x":0.4545454545,"y":-0.315316395},{"x":0.4646464646,"y":-0.3114169292},{"x":0.4747474747,"y":-0.3096786909},{"x":0.4848484848,"y":-0.1593880927},{"x":0.4949494949,"y":0.0169149161},{"x":0.5050505051,"y":0.2517414706},{"x":0.5151515152,"y":0.2363521178},{"x":0.5252525253,"y":0.3965119402},{"x":0.5353535354,"y":0.6125939873},{"x":0.5454545455,"y":0.6322991308},{"x":0.5555555556,"y":0.8281956991},{"x":0.5656565657,"y":0.7678609421},{"x":0.5757575758,"y":1.0149839203},{"x":0.5858585859,"y":1.0180083632},{"x":0.595959596,"y":1.0736203835},{"x":0.6060606061,"y":1.032955295},{"x":0.6161616162,"y":1.0602408738},{"x":0.6262626263,"y":1.1172463796},{"x":0.6363636364,"y":1.1110078006},{"x":0.6464646465,"y":1.1109826767},{"x":0.6565656566,"y":1.0645684436},{"x":0.6666666667,"y":1.1082809611},{"x":0.6767676768,"y":0.9725911701},{"x":0.6868686869,"y":0.7321741518},{"x":0.696969697,"y":0.7185712203},{"x":0.7070707071,"y":0.6680687003},{"x":0.7171717172,"y":0.5774675704},{"x":0.7272727273,"y":0.4498649461},{"x":0.7373737374,"y":0.3786592731},{"x":0.7474747475,"y":0.0741850833},{"x":0.7575757576,"y":0.1360730731},{"x":0.7676767677,"y":-0.1180313075},{"x":0.7777777778,"y":-0.1221959569},{"x":0.7878787879,"y":-0.4513982917},{"x":0.797979798,"y":-0.438333894},{"x":0.8080808081,"y":-0.4631226733},{"x":0.8181818182,"y":-0.569821845},{"x":0.8282828283,"y":-0.8249889353},{"x":0.8383838384,"y":-0.8181132673},{"x":0.8484848485,"y":-0.8955175473},{"x":0.8585858586,"y":-0.8103451336},{"x":0.8686868687,"y":-0.9702015033},{"x":0.8787878788,"y":-0.9196340416},{"x":0.8888888889,"y":-0.792108248},{"x":0.898989899,"y":-0.8595364142},{"x":0.9090909091,"y":-0.7441240608},{"x":0.9191919192,"y":-0.7875390366},{"x":0.9292929293,"y":-0.7094329567},{"x":0.9393939394,"y":-0.5593777983},{"x":0.9494949495,"y":-0.5078769104},{"x":0.9595959596,"y":-0.4681297859},{"x":0.9696969697,"y":-0.1849567688},{"x":0.9797979798,"y":-0.1672012414},{"x":0.9898989899,"y":0.0358746853},{"x":1.0,"y":0.2277564449}]\n',nodeLabel:"TIC",mdxType:"AppDisplay"},'{\n    "rfInstance": {\n        "nodes": [\n            {\n                "width": 190,\n                "height": 115,\n                "id": "END-06a4da40-a0ae-44ad-873b-9b65d096880a",\n                "type": "TERMINATOR",\n                "data": {\n                    "id": "END-06a4da40-a0ae-44ad-873b-9b65d096880a",\n                    "label": "END",\n                    "func": "END",\n                    "type": "TERMINATOR",\n                    "ctrls": {},\n                    "selected": false\n                },\n                "position": {\n                    "x": 1515.0000000000002,\n                    "y": 309.7142857142858\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 1515.0000000000002,\n                    "y": 309.7142857142858\n                },\n                "dragging": true\n            },\n            {\n                "width": 150,\n                "height": 135,\n                "id": "SERIAL-85ac24ea-2486-45d7-9e84-9e28674a248b",\n                "type": "SERIAL",\n                "data": {\n                    "id": "SERIAL-85ac24ea-2486-45d7-9e84-9e28674a248b",\n                    "label": "SERIAL",\n                    "func": "SERIAL",\n                    "type": "SERIAL",\n                    "ctrls": {\n                        "comport": {\n                            "functionName": "SERIAL",\n                            "param": "comport",\n                            "value": "/dev/ttyUSB0"\n                        },\n                        "baudrate": {\n                            "functionName": "SERIAL",\n                            "param": "baudrate",\n                            "value": "9600"\n                        },\n                        "num_readings": {\n                            "functionName": "SERIAL",\n                            "param": "num_readings",\n                            "value": "10"\n                        },\n                        "record_period": {\n                            "functionName": "SERIAL",\n                            "param": "record_period",\n                            "value": "1"\n                        }\n                    },\n                    "selected": false\n                },\n                "position": {\n                    "x": 187.73104547295145,\n                    "y": 270.888916144165\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 187.73104547295145,\n                    "y": 270.888916144165\n                },\n                "dragging": true\n            },\n            {\n                "width": 150,\n                "height": 135,\n                "id": "SELECT_ARRAY-3d6c9d42-ba69-4d00-8ede-4a75d87c4cee",\n                "type": "SELECT_ARRAY",\n                "data": {\n                    "id": "SELECT_ARRAY-3d6c9d42-ba69-4d00-8ede-4a75d87c4cee",\n                    "label": "SELECT_ARRAY_1",\n                    "func": "SELECT_ARRAY",\n                    "type": "SELECT_ARRAY",\n                    "ctrls": {\n                        "column": {\n                            "functionName": "SELECT_ARRAY",\n                            "param": "column",\n                            "value": "0"\n                        }\n                    },\n                    "selected": false\n                },\n                "position": {\n                    "x": 627.1192105282848,\n                    "y": 104.25198394000293\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 627.1192105282848,\n                    "y": 104.25198394000293\n                },\n                "dragging": true\n            },\n            {\n                "width": 150,\n                "height": 135,\n                "id": "SELECT_ARRAY-03541a39-a232-4571-a81d-4df94c19c325",\n                "type": "SELECT_ARRAY",\n                "data": {\n                    "id": "SELECT_ARRAY-03541a39-a232-4571-a81d-4df94c19c325",\n                    "label": "SELECT_ARRAY_2",\n                    "func": "SELECT_ARRAY",\n                    "type": "SELECT_ARRAY",\n                    "ctrls": {\n                        "column": {\n                            "functionName": "SELECT_ARRAY",\n                            "param": "column",\n                            "value": "1"\n                        }\n                    },\n                    "selected": false\n                },\n                "position": {\n                    "x": 620.6737659472158,\n                    "y": 470.47412221254456\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 620.6737659472158,\n                    "y": 470.47412221254456\n                },\n                "dragging": true\n            },\n            {\n                "width": 150,\n                "height": 135,\n                "id": "SCATTER-0f6b5ddd-6646-4119-a8ab-5b95eb628fe3",\n                "type": "PLOTLY_VISOR",\n                "data": {\n                    "id": "SCATTER-0f6b5ddd-6646-4119-a8ab-5b95eb628fe3",\n                    "label": "SCATTER_1",\n                    "func": "SCATTER",\n                    "type": "PLOTLY_VISOR",\n                    "ctrls": {},\n                    "selected": false\n                },\n                "position": {\n                    "x": 1065.009438599987,\n                    "y": 106.9149822749979\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 1065.009438599987,\n                    "y": 106.9149822749979\n                },\n                "dragging": true\n            },\n            {\n                "width": 150,\n                "height": 135,\n                "id": "SCATTER-f46dc017-b49f-43ff-bc6e-8a8175fa50e0",\n                "type": "PLOTLY_VISOR",\n                "data": {\n                    "id": "SCATTER-f46dc017-b49f-43ff-bc6e-8a8175fa50e0",\n                    "label": "SCATTER_2",\n                    "func": "SCATTER",\n                    "type": "PLOTLY_VISOR",\n                    "ctrls": {},\n                    "selected": false\n                },\n                "position": {\n                    "x": 1043.1719153770464,\n                    "y": 485.27307504050464\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 1043.1719153770464,\n                    "y": 485.27307504050464\n                },\n                "dragging": true\n            }\n        ],\n        "edges": [\n            {\n                "source": "SERIAL-85ac24ea-2486-45d7-9e84-9e28674a248b",\n                "sourceHandle": "main",\n                "target": "SELECT_ARRAY-3d6c9d42-ba69-4d00-8ede-4a75d87c4cee",\n                "targetHandle": "SELECT_ARRAY",\n                "id": "reactflow__edge-SERIAL-85ac24ea-2486-45d7-9e84-9e28674a248bmain-SELECT_ARRAY-3d6c9d42-ba69-4d00-8ede-4a75d87c4ceeSELECT_ARRAY"\n            },\n            {\n                "source": "SERIAL-85ac24ea-2486-45d7-9e84-9e28674a248b",\n                "sourceHandle": "main",\n                "target": "SELECT_ARRAY-03541a39-a232-4571-a81d-4df94c19c325",\n                "targetHandle": "SELECT_ARRAY",\n                "id": "reactflow__edge-SERIAL-85ac24ea-2486-45d7-9e84-9e28674a248bmain-SELECT_ARRAY-03541a39-a232-4571-a81d-4df94c19c325SELECT_ARRAY"\n            },\n            {\n                "source": "SELECT_ARRAY-3d6c9d42-ba69-4d00-8ede-4a75d87c4cee",\n                "sourceHandle": "main",\n                "target": "SCATTER-0f6b5ddd-6646-4119-a8ab-5b95eb628fe3",\n                "targetHandle": "SCATTER",\n                "id": "reactflow__edge-SELECT_ARRAY-3d6c9d42-ba69-4d00-8ede-4a75d87c4ceemain-SCATTER-0f6b5ddd-6646-4119-a8ab-5b95eb628fe3SCATTER"\n            },\n            {\n                "source": "SELECT_ARRAY-03541a39-a232-4571-a81d-4df94c19c325",\n                "sourceHandle": "main",\n                "target": "SCATTER-f46dc017-b49f-43ff-bc6e-8a8175fa50e0",\n                "targetHandle": "SCATTER",\n                "id": "reactflow__edge-SELECT_ARRAY-03541a39-a232-4571-a81d-4df94c19c325main-SCATTER-f46dc017-b49f-43ff-bc6e-8a8175fa50e0SCATTER"\n            },\n            {\n                "source": "SCATTER-f46dc017-b49f-43ff-bc6e-8a8175fa50e0",\n                "sourceHandle": "main",\n                "target": "END-06a4da40-a0ae-44ad-873b-9b65d096880a",\n                "targetHandle": "END",\n                "id": "reactflow__edge-SCATTER-f46dc017-b49f-43ff-bc6e-8a8175fa50e0main-END-06a4da40-a0ae-44ad-873b-9b65d096880aEND"\n            },\n            {\n                "source": "SCATTER-0f6b5ddd-6646-4119-a8ab-5b95eb628fe3",\n                "sourceHandle": "main",\n                "target": "END-06a4da40-a0ae-44ad-873b-9b65d096880a",\n                "targetHandle": "END",\n                "id": "reactflow__edge-SCATTER-0f6b5ddd-6646-4119-a8ab-5b95eb628fe3main-END-06a4da40-a0ae-44ad-873b-9b65d096880aEND"\n            }\n        ],\n        "viewport": {\n            "x": 396.0138055825488,\n            "y": 143.72891465335266,\n            "zoom": 1.2009516469523838\n        }\n    },\n    "ctrlsManifest": [\n        {\n            "type": "input",\n            "name": "Numeric Input",\n            "minWidth": 1,\n            "minHeight": 1,\n            "hidden": false,\n            "id": "ctrl-f24eb812-5131-4a5a-ada7-f729784f06cd",\n            "layout": {\n                "x": 0,\n                "y": 1,\n                "h": 2,\n                "w": 2,\n                "i": "ctrl-f24eb812-5131-4a5a-ada7-f729784f06cd",\n                "minH": 1,\n                "minW": 1,\n                "static": false\n            },\n            "param": {\n                "id": "SERIAL_SERIAL_num_readings",\n                "functionName": "SERIAL",\n                "param": "num_readings",\n                "nodeId": "SERIAL-85ac24ea-2486-45d7-9e84-9e28674a248b",\n                "inputId": "ctrl-f24eb812-5131-4a5a-ada7-f729784f06cd",\n                "type": "float"\n            },\n            "val": 100\n        },\n        {\n            "type": "input",\n            "name": "Numeric Input",\n            "minWidth": 1,\n            "minHeight": 1,\n            "hidden": false,\n            "id": "ctrl-917255d4-18d6-4c96-88f0-0d0797b10c09",\n            "layout": {\n                "x": 0,\n                "y": 1,\n                "h": 2,\n                "w": 2,\n                "i": "ctrl-917255d4-18d6-4c96-88f0-0d0797b10c09",\n                "minH": 1,\n                "minW": 1,\n                "static": false\n            },\n            "param": {\n                "id": "SELECT_ARRAY_SELECT_ARRAY_1_column",\n                "functionName": "SELECT_ARRAY",\n                "param": "column",\n                "nodeId": "SELECT_ARRAY-3d6c9d42-ba69-4d00-8ede-4a75d87c4cee",\n                "inputId": "ctrl-917255d4-18d6-4c96-88f0-0d0797b10c09",\n                "type": "float"\n            },\n            "val": 0\n        },\n        {\n            "type": "input",\n            "name": "Numeric Input",\n            "minWidth": 1,\n            "minHeight": 1,\n            "hidden": false,\n            "id": "ctrl-f26735ab-ddf9-4614-bf9a-12684213347c",\n            "layout": {\n                "x": 0,\n                "y": 3,\n                "h": 2,\n                "w": 2,\n                "i": "ctrl-f26735ab-ddf9-4614-bf9a-12684213347c",\n                "minH": 1,\n                "minW": 1,\n                "static": false\n            },\n            "param": {\n                "id": "SELECT_ARRAY_SELECT_ARRAY_2_column",\n                "functionName": "SELECT_ARRAY",\n                "param": "column",\n                "nodeId": "SELECT_ARRAY-03541a39-a232-4571-a81d-4df94c19c325",\n                "inputId": "ctrl-f26735ab-ddf9-4614-bf9a-12684213347c",\n                "type": "float"\n            },\n            "val": 0\n        }\n    ]\n}\n'),(0,r.kt)(m.default,{mdxType:"Example1"}),(0,r.kt)(o.Z,{mdxType:"SectionBreak"}),(0,r.kt)("h2",{id:"appendix"},"Appendix"),(0,r.kt)(c.Z,{index:0,folderPath:"py_serial/appendix/",mdxType:"AppendixSection"},"Theoretical notes and Documentation about Arduino and Serial node : \n\nFor example, you can record temperature following this [tutorial] (https://learn.adafruit.com/thermistor/using-a-thermistor)"),(0,r.kt)(c.Z,{index:1,folderPath:"py_serial//appendix/",mdxType:"AppendixSection"},"Hardware requirements : \n\nAn Arduino microcontroller.\n\n"),(0,r.kt)(c.Z,{index:2,folderPath:"py_serial//appendix/",mdxType:"AppendixSection"},"![image](/img/serial/load.png)\n*Load the app.*\n\n![image](/img/serial/script.png)\n*The app should match this image.*"))}A.isMDXComponent=!0},86621:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>d,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var a=t(87462),r=(t(67294),t(3905));const i={},d=void 0,l={unversionedId:"nodes/instruments/serial/py_serial/examples/EX1/example",id:"nodes/instruments/serial/py_serial/examples/EX1/example",title:"example",description:"",source:"@site/docs/nodes/instruments/serial/py_serial/examples/EX1/example.md",sourceDirName:"nodes/instruments/serial/py_serial/examples/EX1",slug:"/nodes/instruments/serial/py_serial/examples/EX1/example",permalink:"/nodes/instruments/serial/py_serial/examples/EX1/example",draft:!1,tags:[],version:"current",frontMatter:{}},s={},o=[],c={toc:o};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}))}m.isMDXComponent=!0}}]);