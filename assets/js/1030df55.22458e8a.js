"use strict";(self.webpackChunkflojoy_doc=self.webpackChunkflojoy_doc||[]).push([[9147],{62605:(e,t,n)=>{n.d(t,{Z:()=>f});var a=n(67294),l=n(74866),o=n(85162),i=n(92949),r=(n(91262),n(97904)),s=n(83599);n(99869);const d=(0,a.memo)((e=>{let{data:t}=e;return a.createElement(a.Fragment,null,a.createElement(r.HH,{type:"target",position:r.Ly.Left,style:{background:"#555"}}),a.createElement("div",null,a.createElement("strong",null,t.label)),a.createElement(r.HH,{type:"source",position:r.Ly.Right,id:"b"}))}));var p=n(33140),c=n(73091),u=n(2029),m=n(287);const h={default:d},g={tickLabels:{fontSize:8,fill:"#BCC2C4"},label:{fontSize:8,fill:"#BCC2C4"}};function f(e){let{children:t,title:n,data:d}=e,f=JSON.parse(t).rfInstance;const E="20em",{colorMode:y}=(0,i.I)();return a.createElement("div",null,a.createElement("h2",null,`Example: ${n}`),a.createElement(l.Z,null,a.createElement(o.Z,{value:"app",label:"App",default:!0},a.createElement("div",{style:{height:E}},a.createElement(r.x$,{nodes:f.nodes,nodeTypes:h,edges:f.edges,preventScrolling:!0,fitView:!0,panOnDrag:!1,proOptions:{hideAttribution:!0}},a.createElement(s.A,null)))),a.createElement(o.Z,{value:"output",label:"Output"},a.createElement("div",{style:{minHeight:E}},a.createElement(p.k,null,a.createElement(c.E,{label:"x",style:g}),a.createElement(c.E,{dependentAxis:!0,label:"y",style:g}),a.createElement(u.C,{style:{data:{fill:"#7B61FF"}},size:1,data:JSON.parse(d)})))),a.createElement(o.Z,{value:"spec",label:"App JSON spec"},a.createElement("div",{style:{minHeight:E}},a.createElement(m.L,{data:f})))))}},89418:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),l=n(25365);function o(e){let{children:t,index:n,folderPath:o}=e;const i=["notes.md","hardware.md","media.md"],r=["Theory and technical notes","Parts list and drivers","Media"][n],s="https://github.com/flojoy-io/docs/tree/main/docs/nodes"+o+i[n],d="string"==typeof t&&t.includes("Driver doc :");return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("details",null,a.createElement("summary",null,a.createElement("span",{style:{display:"inline-block",cursor:"pointer"}},a.createElement("h4",null,r))),d?null:void 0!==t?a.createElement(l.D,null,t):a.createElement(l.D,null,["No theory or technical notes have been contributed for this node yet.","This node does not require any peripheral hardware to operate. Please see INSTRUMENTS for nodes that interact with the physical world through connected hardware.","No supporting screenshots, photos, or videos have been added to the media.md file for this node."][n]),a.createElement("br",null),a.createElement("small",null,a.createElement("i",null,a.createElement("a",{href:s},"Edit ",i[n]," on GitHub")))),a.createElement("hr",null))}},57685:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294);function l(e){let{children:t}=e;return""===t.trim()?"This function does not have a docstring description yet.":a.createElement(a.Fragment,null,a.createElement("blockquote",{style:{padding:"0.2rem"}},t),a.createElement("br",null))}},47062:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),l=n(38388);function o(e){let{children:t}=e;const n="This node does not currently have any input parameters.",o="parameters";if(""===t.trim())return n;let i=l.ZP.parse(t);if(Object.keys(i)[0]!=o)return n;let r=i.parameters;return a.createElement("div",null,a.createElement("h3",null,"Input parameters"),Object.keys(r).map(((e,t)=>a.createElement(a.Fragment,null,a.createElement("details",null,a.createElement("summary",{key:t},a.createElement("code",null,e)),a.createElement("ul",null,Object.keys(r[e]).map(((t,n)=>a.createElement("li",{key:n},t,": ",r[e][t])))))))))}},79267:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),l=n(90814);function o(e){let{children:t}=e,n=t;if(n.includes('"""')){let e=n.split('"""')[0],t=n.split('"""')[2];n=e.trimEnd()+t.trimStart().replace("\n\n","\n")}return a.createElement("div",null,a.createElement("h3",null,"Python code"),a.createElement("details",{open:!0},a.createElement(l.Z,{className:"language-python"},n)),a.createElement("br",null))}},91906:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294);function l(){return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("br",null),a.createElement("hr",null),a.createElement("br",null),a.createElement("br",null))}},87123:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>m,default:()=>y,frontMatter:()=>u,metadata:()=>h,toc:()=>f});var a=n(87462),l=(n(67294),n(3905)),o=n(57685),i=n(79267),r=n(47062),s=n(62605),d=n(91906),p=n(89418);var c=n(35235);const u={},m=void 0,h={unversionedId:"nodes/instruments/phidget/phidget22/PHIDGET22",id:"nodes/instruments/phidget/phidget22/PHIDGET22",title:"PHIDGET22",description:"[//]: # (Custom component imports)",source:"@site/docs/nodes/instruments/phidget/phidget22/PHIDGET22.md",sourceDirName:"nodes/instruments/phidget/phidget22",slug:"/nodes/instruments/phidget/phidget22/",permalink:"/nodes/instruments/phidget/phidget22/",draft:!1,tags:[],version:"current",frontMatter:{}},g={},f=[{value:"Appendix",id:"appendix",level:2}],E={toc:f};function y(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},E,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"DocString"},"The PHIDGET22 node allows you to record pressure measurement using a Phidget interface kit and pressure sensors.\nYou'll need to calibrate your sensors before using the app in order to record accurate pressure measurements."),(0,l.kt)(i.Z,{mdxType:"PythonCode"},'from flojoy import flojoy, DataContainer\nimport Phidget22\nfrom Phidget22.Phidget import *\nfrom Phidget22.Devices.VoltageRatioInput import *\n\n\ndef onVoltageRatioChange(self, voltageRatio):\n    """Declaration of the Event handler, print Voltage variation for a channel"""\n    print("VoltageRatio [" + str(self.getChannel()) + "]: " + str(voltageRatio))\n\n\n@flojoy\ndef PHIDGET22(dc, params):\n    """Pressure Measurement with Phidget 22 sensors"""\n    voltage = []\n    pressions = []\n    N = int(params["n_sensors"])\n\n    for i in range(0, N):\n        # Creation of an instance of the VoltageRationInput class\n        voltageRatioInput = VoltageRatioInput()\n        # Set Channel for Communication with the Phidget Interface Kit :\n        voltageRatioInput.setChannel(i)\n        # Assign the handler that will be called when the event occurs :\n        voltageRatioInput.setOnVoltageRatioChangeHandler(onVoltageRatioChange)\n        # Open the Channel after event handler is set :\n        voltageRatioInput.openWaitForAttachment(5000)\n\n        volt_i = voltageRatioInput.getVoltageRatio()  # Measure Voltage from the sensor\n        voltage.append(volt_i)  # Add Voltage to the list of measurements\n\n        # Example of a Calibration to convert Voltage into pressions :\n        pression_i = (volt_i - float(params["calibration1"])) / float(\n            arams["calibration2"]\n        )\n\n        pressions.append(pression_i)\n\n    return DataContainer(x={"a": voltage, "b": pressions}, y=pressions)'),(0,l.kt)(r.Z,{mdxType:"Parameters"},"    parameters:\n      n_sensors:\n        type: int\n        default: 3\n      calibration1 :\n        type: float\n        default: 0.015\n      calibration2:\n        type: float\n        default: 0.06"),(0,l.kt)(d.Z,{mdxType:"SectionBreak"}),(0,l.kt)(s.Z,{title:"Pressure measurement with Phidget 22",data:'[{"x":0,"y":1027},{"x":1,"y":1023},{"x":2,"y":1025},{"x":3,"y":1032},{"x":4,"y":1028},{"x":5,"y":1022}]',nodeLabel:"Pressures",mdxType:"AppDisplay"},'{\n    "rfInstance": {\n        "nodes": [\n            {\n                "width": 250,\n                "height": 159,\n                "id": "SCATTER-da4e4991-d9a4-4c71-95e6-56b13266ede6",\n                "type": "VISOR",\n                "data": {\n                    "id": "SCATTER-da4e4991-d9a4-4c71-95e6-56b13266ede6",\n                    "label": "SCATTER",\n                    "func": "SCATTER",\n                    "type": "VISOR",\n                    "ctrls": {},\n                    "selected": false\n                },\n                "position": {\n                    "x": 914.1428571428573,\n                    "y": 301.4285714285715\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 914.1428571428573,\n                    "y": 301.4285714285715\n                },\n                "dragging": true\n            },\n            {\n                "width": 150,\n                "height": 135,\n                "id": "END-06a4da40-a0ae-44ad-873b-9b65d096880a",\n                "type": "TERMINATOR",\n                "data": {\n                    "id": "END-06a4da40-a0ae-44ad-873b-9b65d096880a",\n                    "label": "END",\n                    "func": "END",\n                    "type": "TERMINATOR",\n                    "ctrls": {},\n                    "selected": false\n                },\n                "position": {\n                    "x": 1515.0000000000002,\n                    "y": 309.7142857142858\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 1515.0000000000002,\n                    "y": 309.7142857142858\n                },\n                "dragging": true\n            },\n            {\n                "width": 150,\n                "height": 135,\n                "id": "PHIDGET22-40ee0d32-7bac-4f5e-af57-419c81c66fab",\n                "type": "PHIDGET",\n                "data": {\n                    "id": "PHIDGET22-40ee0d32-7bac-4f5e-af57-419c81c66fab",\n                    "label": "PHIDGET22",\n                    "func": "PHIDGET22",\n                    "type": "PHIDGET",\n                    "ctrls": {\n                        "n_sensors": {\n                            "functionName": "PHIDGET22",\n                            "param": "n_sensors",\n                            "value": "3"\n                        }\n                    },\n                    "selected": true\n                },\n                "position": {\n                    "x": 427.8389417060295,\n                    "y": 308.62328644119407\n                },\n                "selected": true,\n                "positionAbsolute": {\n                    "x": 427.8389417060295,\n                    "y": 308.62328644119407\n                },\n                "dragging": true\n            }\n        ],\n        "edges": [\n            {\n                "source": "SCATTER-da4e4991-d9a4-4c71-95e6-56b13266ede6",\n                "sourceHandle": "main",\n                "target": "END-06a4da40-a0ae-44ad-873b-9b65d096880a",\n                "targetHandle": "END",\n                "id": "reactflow__edge-SCATTER-da4e4991-d9a4-4c71-95e6-56b13266ede6main-END-06a4da40-a0ae-44ad-873b-9b65d096880aEND"\n            },\n            {\n                "source": "PHIDGET22-40ee0d32-7bac-4f5e-af57-419c81c66fab",\n                "sourceHandle": "main",\n                "target": "SCATTER-da4e4991-d9a4-4c71-95e6-56b13266ede6",\n                "targetHandle": "SCATTER",\n                "id": "reactflow__edge-PHIDGET22-40ee0d32-7bac-4f5e-af57-419c81c66fabmain-SCATTER-da4e4991-d9a4-4c71-95e6-56b13266ede6SCATTER"\n            }\n        ],\n        "viewport": {\n            "x": 287.4582919902831,\n            "y": 156.16299996578516,\n            "zoom": 0.8770657268963626\n        }\n    },\n    "ctrlsManifest": [\n        {\n            "type": "input",\n            "name": "Slider",\n            "id": "INPUT_PLACEHOLDER",\n            "hidden": false,\n            "minHeight": 1,\n            "minWidth": 2,\n            "layout": {\n                "x": 0,\n                "y": 0,\n                "h": 2,\n                "w": 2,\n                "minH": 1,\n                "minW": 2,\n                "i": "INPUT_PLACEHOLDER"\n            },\n            "param": {\n                "id": "PHIDGET22_PHIDGET22_n_sensors",\n                "functionName": "PHIDGET22",\n                "param": "n_sensors",\n                "nodeId": "PHIDGET22-40ee0d32-7bac-4f5e-af57-419c81c66fab",\n                "inputId": "INPUT_PLACEHOLDER",\n                "type": "int"\n            },\n            "val": 3\n        }\n    ]\n}'),(0,l.kt)(c.default,{mdxType:"Example1"}),(0,l.kt)(d.Z,{mdxType:"SectionBreak"}),(0,l.kt)("h2",{id:"appendix"},"Appendix"),(0,l.kt)(p.Z,{index:0,folderPath:"phidget/phidget22/appendix/",mdxType:"AppendixSection"},"\n\n[Phidget Website](https://www.phidgets.com/docs/Main_Page)"),(0,l.kt)(p.Z,{index:1,folderPath:"phidget/phidget22/appendix/",mdxType:"AppendixSection"}," \n- [A Phidget InterfaceKit](https://www.phidgets.com/?tier=3&catid=2&pcid=1&prodid=18) (Model 8/8/8 1018_3 is the one we used to develop the node)\n- N pressure sensors(This tutorial will present measurement from [FlexiForce sensor](https://www.phidgets.com/?tier=3&catid=6&pcid=4&prodid=206), but you can use all the Sensors compatible with Phidget.)\n- Connections cables (USB, Electronic cables)\n\n\n\n\n\n"),(0,l.kt)(p.Z,{index:2,folderPath:"phidget/phidget22/appendix/",mdxType:"AppendixSection"},"![Phidget-sensor](https://res.cloudinary.com/dhopxs1y3/image/upload/v1681998936/flojoy-docs/Phidget22/Phidget22_sensor_somv3v.jpg)\n\n![Phidget-nodes](https://res.cloudinary.com/dhopxs1y3/image/upload/v1681998928/flojoy-docs/Phidget22/PHIDGET22_nodeswithloop_fcsmeg.png)\n\n![Phidgets nodes with loop](https://res.cloudinary.com/dhopxs1y3/image/upload/v1681998928/flojoy-docs/Phidget22/PHIDGET22_nodes_frmvux.png)\n"))}y.isMDXComponent=!0},35235:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var a=n(87462),l=(n(67294),n(3905));const o={},i=void 0,r={unversionedId:"nodes/instruments/phidget/phidget22/examples/EX1/example",id:"nodes/instruments/phidget/phidget22/examples/EX1/example",title:"example",description:"The example above show a simple Flojoy app for the PHIDGET22 node, before using it you'll need to connect all your devices and",source:"@site/docs/nodes/instruments/phidget/phidget22/examples/EX1/example.md",sourceDirName:"nodes/instruments/phidget/phidget22/examples/EX1",slug:"/nodes/instruments/phidget/phidget22/examples/EX1/example",permalink:"/nodes/instruments/phidget/phidget22/examples/EX1/example",draft:!1,tags:[],version:"current",frontMatter:{}},s={},d=[{value:"Connection :",id:"connection-",level:3},{value:"Calibration :",id:"calibration-",level:3},{value:"Parameters :",id:"parameters-",level:3},{value:"Visualisation :",id:"visualisation-",level:3}],p={toc:d};function c(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The example above show a simple Flojoy app for the PHIDGET22 node, before using it you'll need to connect all your devices and\ncalibrate your sensors :"),(0,l.kt)("h3",{id:"connection-"},"Connection :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Connect the PHIDGET Interfacekit to your computer with a USB Cable"),(0,l.kt)("li",{parentName:"ul"},"Connect the Flexiforce sensors with the Phidget Interfacekit using a Flexiforce adapter (See Image)")),(0,l.kt)("h3",{id:"calibration-"},"Calibration :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Apply some known pressures and measure induced voltages on your sensor. Use the Phidget control panel in order to do that.\nIt should be a linear relation between them and the calibration parameters are the coefficients of the line :"),(0,l.kt)("li",{parentName:"ul"},"Volt=Cal2*Pression+Cal1 --\x3e Pression=Voltage-Cal1 / Cal2.")),(0,l.kt)("h3",{id:"parameters-"},"Parameters :"),(0,l.kt)("p",null,"After that you can set up the parameters for the Phidget22 node: "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"N_Sensors : Number of sensors"),(0,l.kt)("li",{parentName:"ul"},"Calibration 1 & 2 : Linear relation between pressure and voltage measurements")),(0,l.kt)("h3",{id:"visualisation-"},"Visualisation :"),(0,l.kt)("p",null,"Before running choose the Visualisation node that fits your project to display the pressure measurements as you want.  "),(0,l.kt)("p",null,"It's also possible to update pressure measurements with time using the LOOP node (See documentation)."))}c.isMDXComponent=!0}}]);